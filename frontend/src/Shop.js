import { useEffect, useState } from 'react';
import Slider from 'react-slick';
import Modal from './Modal'; // –ò–º–ø–æ—Ä—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
import './Shop.css';
import 'slick-carousel/slick/slick.css';
import 'slick-carousel/slick/slick-theme.css';

const ShopPage = () => {
    const [comics, setComics] = useState([]);
    const [loading, setLoading] = useState(true);
    const [error, setError] = useState(null);
    const [showModal, setShowModal] = useState(false);
    const [selectedComic, setSelectedComic] = useState(null);
    const [cartCount, setCartCount] = useState(0); // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∫–æ—Ä–∑–∏–Ω–µ

    useEffect(() => {
        const fetchComics = async () => {
            try {
                const response = await fetch('http://localhost:8000/api/comics');
                if (!response.ok) {
                    throw new Error('–û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –∏–ª–∏ —Å–µ—Ä–≤–µ—Ä –≤–µ—Ä–Ω—É–ª –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç');
                }
                const data = await response.json();
                console.log('–ó–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ –∫–æ–º–∏–∫—Å–∞—Ö:', data);
                // –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ - —ç—Ç–æ –º–∞—Å—Å–∏–≤
                if (Array.isArray(data)) {
                    setComics(data);
                } else {
                    throw new Error('–û—Ç–≤–µ—Ç API –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –º–∞—Å—Å–∏–≤–æ–º');
                }
            } catch (error) {
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö –æ –∫–æ–º–∏–∫—Å–∞—Ö:', error);
                setError(error.message);
            } finally {
                setLoading(false);
            }
        };

        fetchComics();
    }, []);

    const fetchComicDetails = async (id) => {
        try {
            const response = await fetch(`http://localhost:8000/api/comics/${id}`);
            if (!response.ok) {
                throw new Error('–û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –∏–ª–∏ —Å–µ—Ä–≤–µ—Ä –≤–µ—Ä–Ω—É–ª –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç');
            }
            const data = await response.json();
            setSelectedComic(data);
            setShowModal(true);
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–æ–º–∏–∫—Å–µ:', error);
        }
    };

    const handleCardClick = (comicId) => {
        fetchComicDetails(comicId);
    };

    const handleBuyClick = (e, comic) => {
        e.stopPropagation(); // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –≤—Å–ø–ª—ã—Ç–∏–µ —Å–æ–±—ã—Ç–∏—è –∫–ª–∏–∫–∞
        console.log('–ü–æ–∫—É–ø–∫–∞ –∫–æ–º–∏–∫—Å–∞:', comic);
        setCartCount(cartCount + 1); // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∫–æ—Ä–∑–∏–Ω–µ
    };

    const handleCloseModal = () => {
        setShowModal(false);
        setSelectedComic(null);
    };

    const handleClearCart = () => {
        setCartCount(0); // –û—á–∏—Å—Ç–∫–∞ –∫–æ—Ä–∑–∏–Ω—ã
    };

    const settings = {
        dots: true,
        infinite: true,
        speed: 500,
        slidesToShow: 3,
        slidesToScroll: 1,
        responsive: [
            {
                breakpoint: 1024,
                settings: {
                    slidesToShow: 3,
                    slidesToScroll: 1,
                    infinite: true,
                    dots: true
                }
            },
            {
                breakpoint: 600,
                settings: {
                    slidesToShow: 2,
                    slidesToScroll: 1,
                    initialSlide: 2
                }
            },
            {
                breakpoint: 480,
                settings: {
                    slidesToShow: 1,
                    slidesToScroll: 1
                }
            }
        ]
    };

    if (loading) return <div>–ó–∞–≥—Ä—É–∑–∫–∞...</div>;
    if (error) return <div>–û—à–∏–±–∫–∞: {error}</div>;

    return (
        <div className="shopPage">
            <h2 id="shop" className="Title">–ñ—É—Ä–Ω–∞–ª—ã</h2>
            <Slider {...settings}>
                {comics.map((comic) => (
                    <div key={comic.id} className="shopCard" onClick={() => handleCardClick(comic.id)}>
                        <img src={`/comics/${comic.id}.jpg`} alt={comic.title} className="productImage"/>
                        <div className="info">
                            <p>{comic.title}</p>
                            <p>{comic.price} —Ä—É–±–ª–µ–π</p>
                            <button
                                className="buyButton"
                                onClick={(e) => handleBuyClick(e, comic)}
                            >
                                –ö—É–ø–∏—Ç—å
                            </button>
                        </div>
                    </div>
                ))}
            </Slider>
            {selectedComic && (
                <Modal
                    show={showModal}
                    onClose={handleCloseModal}
                    comic={selectedComic}
                />
            )}
            <div className="shopControls">
                <button className="cartButton">
                    üõí {cartCount}
                </button>
                <button className="clearButton" onClick={handleClearCart}>
                    ‚ùå
                </button>
            </div>
        </div>
    );
};

export default ShopPage;
